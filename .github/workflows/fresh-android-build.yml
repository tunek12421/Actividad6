name: Fresh Android Build

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 35
        build-tools: 35.0.0
        ndk-version: 25.1.8937393

    - name: Accept Android licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Install npm dependencies
      run: npm ci

    - name: Build web app
      run: npm run build

    - name: Remove existing Android project
      run: |
        rm -rf android/
        echo "Removed existing Android project"

    - name: Add fresh Android platform
      run: |
        npx cap add android
        echo "Added fresh Android platform"

    - name: Update Android project configuration
      run: |
        # Update app ID in Android project
        sed -i 's/com\.example\.app/com.tunek.booksapp/g' android/app/build.gradle
        sed -i 's/com\.example\.app/com.tunek.booksapp/g' android/app/src/main/AndroidManifest.xml
        
        # Add Java 17 compatibility to build.gradle
        sed -i '/buildTypes {/i\    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }' android/app/build.gradle
        
        # Add global Java 17 compatibility for all modules including Capacitor
        sed -i '/allprojects {/,/}/ {
          /}$/ i\    \n    // Force Java 17 compatibility for all modules\n    afterEvaluate { project ->\n        if (project.hasProperty("android")) {\n            project.android {\n                compileOptions {\n                    sourceCompatibility JavaVersion.VERSION_17\n                    targetCompatibility JavaVersion.VERSION_17\n                }\n            }\n        }\n    }
        }' android/build.gradle
        
        # Update variables for better compatibility
        cat > android/variables.gradle << EOF
        ext {
            minSdkVersion = 22
            compileSdkVersion = 33
            targetSdkVersion = 33
            androidxActivityVersion = '1.7.2'
            androidxAppCompatVersion = '1.5.1'
            androidxCoordinatorLayoutVersion = '1.2.0'
            androidxCoreVersion = '1.9.0'
            androidxFragmentVersion = '1.5.4'
            coreSplashScreenVersion = '1.0.0'
            androidxWebkitVersion = '1.5.0'
            junitVersion = '4.13.2'
            androidxJunitVersion = '1.1.4'
            androidxEspressoCoreVersion = '3.5.0'
            cordovaAndroidVersion = '10.1.1'
        }
        EOF
        
        # Update gradle.properties for AndroidX compatibility
        cat >> android/gradle.properties << EOF
        
        # Automatically convert third-party libraries to use AndroidX
        android.enableJetifier=true
        EOF
        
        echo "Updated Android configuration"

    - name: Sync Capacitor
      run: |
        npx cap sync android
        echo "Capacitor sync completed"

    - name: Build Android Debug APK
      working-directory: android
      run: |
        chmod +x ./gradlew
        ./gradlew clean
        ./gradlew assembleDebug \
          --no-daemon \
          --stacktrace \
          -Dorg.gradle.jvmargs="-Xmx3072m -XX:MaxMetaspaceSize=512m" \
          -Dkotlin.daemon.jvm.options="-Xmx1024m"

    - name: List APK files
      run: |
        echo "Looking for APK files:"
        find android -name "*.apk" -type f -exec ls -la {} \;

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: fresh-debug-apk-${{ github.run_number }}
        path: |
          android/app/build/outputs/apk/debug/*.apk
          android/**/build/outputs/apk/debug/*.apk
        if-no-files-found: warn

    - name: Build Summary
      if: always()
      run: |
        echo "## 🏗️ Fresh Android Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- Node.js: $(node --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Java: $(java -version 2>&1 | head -1)" >> $GITHUB_STEP_SUMMARY
        echo "- Capacitor: $(npx cap --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Build: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        APK_COUNT=$(find android -name "*.apk" -type f | wc -l)
        echo "**APK files generated:** $APK_COUNT" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "android/app/build/outputs/apk/debug/app-debug.apk" ]; then
          APK_SIZE=$(stat -c%s android/app/build/outputs/apk/debug/app-debug.apk)
          echo "**APK size:** ${APK_SIZE} bytes" >> $GITHUB_STEP_SUMMARY
        fi